name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hello-world
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd src
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Update kube config
      run: |
        mkdir -p ~/.kube
        aws eks update-kubeconfig --name hello-world-eks --region us-east-1

    - name: Deploy to Kubernetes
      run: |
        sed -i'' -e "s|image: .*|image: ${{ steps.login-ecr.outputs.registry }}/hello-world:${{ github.sha }}|" k8s/deployment.yaml
        kubectl apply -k k8s/ --validate=false

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/hello-world -n hello-world

    - name: Run tests
      run: |
        echo "Waiting for service to be available..."
        sleep 30
        SERVICE_URL=$(kubectl get svc hello-world -n hello-world -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
        curl -s $SERVICE_URL | grep "Hello World"
